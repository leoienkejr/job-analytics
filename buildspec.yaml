version: 0.2

phases:
  install:
    commands:
      - apt-get -qq update
      - apt-get -qq install -o Dpkg::Progress-Fancy="0" -o APT::Color="0" -o Dpkg::Use-Pty="0" -y git gnupg software-properties-common curl
      - wget -nv -O- https://apt.releases.hashicorp.com/gpg | gpg --quiet --dearmor > /usr/share/keyrings/hashicorp-archive-keyring.gpg
      - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
      - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" > /etc/apt/sources.list.d/hashicorp.list
      - apt-get -qq update
      - apt-get -qq install -o Dpkg::Progress-Fancy="0" -o APT::Color="0" -o Dpkg::Use-Pty="0" -y terraform

  build:
    commands:
      - ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
      - ARTIFACTS_BUCKET="s3://${ACCOUNT_ID}-job-analytics-artifacts"
      - FULL_REPO_COPY_PATH="${ARTIFACTS_BUCKET}/full_repo/"
      - ECR_DEFAULT_REGISTRY_PASSWORD=$(aws ecr get-login-password --region "${AWS_REGION}")
    
      # "Updating repository copy on artifacts bucket
      - aws s3 rm "${FULL_REPO_COPY_PATH}" --recursive --only-show-errors
      - aws s3 cp . "${FULL_REPO_COPY_PATH}" --recursive --only-show-errors

      #  Updating Terraform stack 'cicd_pipeline'
      - cd src/terraform/cicd_pipeline
      - echo "bucket = \"${ACCOUNT_ID}-terraform-backend\"\nkey = \"deploy/terraform.state\"\nregion = \"${AWS_REGION}\"" > backend.hcl
      - terraform init -input=false -backend-config=backend.hcl
      - terraform apply -auto-approve -compact-warnings -input=false -var "source_repository_id=${REPOSITORY_ID}"
      - terraform output -json >> ../../../cicd_pipeline.json
      - cd ../../../

      # Build Lambda packages
      - pip install -r src/scripts/build_lambda_packages_in_s3/requirements.txt  -t src/scripts/build_lambda_packages_in_s3/
      - python src/scripts/build_lambda_packages_in_s3/build_lambda_packages_in_s3.py -s src/lambda/python/ -d "${ARTIFACTS_BUCKET}/lambda_packages/"

      # Updating Terraform stack 'ecr_repos'
      - cd src/terraform/ecr_repos
      - echo "bucket = \"${ACCOUNT_ID}-terraform-backend\"\nkey = \"ecr_repos/terraform.state\"\nregion = \"${AWS_REGION}\"" > backend.hcl
      - terraform init -input=false -backend-config=backend.hcl
      - terraform apply -auto-approve -compact-warnings -input=false
      - cd ../../../

      # Updating Terraform stack 'job_analytics'
      - cd src/terraform/job_analytics
      - echo "bucket = \"${ACCOUNT_ID}-terraform-backend\"\nkey = \"job_analytics/terraform.state\"\nregion = \"${AWS_REGION}\"" > backend.hcl
      - echo ecr_default_registry_password=\"$ECR_DEFAULT_REPOSITORY_PASSWORD\" > input.tfvars
      - terraform init -input=false -backend-config=backend.hcl
      - terraform apply -auto-approve -compact-warnings -input=false -var-file=input.tfvars
      - cd ../../../